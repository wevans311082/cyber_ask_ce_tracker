# Generated by Django 5.2 on 2025-05-17 23:08

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tracker', '0035_tenablevulnerabilityfinding'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetScanDataSnapshot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parsed_operating_system', models.CharField(blank=True, help_text='OS string as parsed from the scan.', max_length=255, null=True)),
                ('last_reboot_time', models.DateTimeField(blank=True, help_text='Last reboot time of the asset, if found.', null=True)),
                ('hardware_info_json', models.JSONField(blank=True, help_text='Parsed hardware details (manufacturer, model, BIOS, TPM).', null=True)),
                ('network_config_json', models.JSONField(blank=True, help_text='Parsed network configuration (MACs, DNS, Gateways - PII sensitive for IPs).', null=True)),
                ('user_accounts_summary_json', models.JSONField(blank=True, help_text='Password policy, admin group members.', null=True)),
                ('system_hardening_json', models.JSONField(blank=True, help_text='List of system hardening checks and their statuses.', null=True)),
                ('smb_shares_json', models.JSONField(blank=True, help_text='List of enumerated SMB shares.', null=True)),
                ('ce_plus_assessment_failures_json', models.JSONField(blank=True, default=list, help_text='List of automated CE+ check failure reasons.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scan_log', models.ForeignKey(help_text='The Tenable scan log this snapshot is derived from.', on_delete=django.db.models.deletion.CASCADE, related_name='asset_snapshots', to='tracker.tenablescanlog')),
                ('scoped_item', models.ForeignKey(help_text='The scoped asset this snapshot pertains to.', on_delete=django.db.models.deletion.CASCADE, related_name='scan_snapshots', to='tracker.scopeditem')),
            ],
            options={
                'verbose_name': 'Asset Scan Data Snapshot',
                'verbose_name_plural': 'Asset Scan Data Snapshots',
                'ordering': ['scoped_item', '-scan_log__created_at'],
                'unique_together': {('scoped_item', 'scan_log')},
            },
        ),
        migrations.CreateModel(
            name='AssetInstalledSoftware',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512)),
                ('version', models.CharField(blank=True, max_length=100, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('install_path', models.CharField(blank=True, max_length=1024, null=True)),
                ('plugin_id_source', models.IntegerField(blank=True, help_text='Nessus Plugin ID that reported this software.', null=True)),
                ('asset_scan_snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installed_software', to='tracker.assetscandatasnapshot')),
            ],
            options={
                'verbose_name': 'Asset Installed Software',
                'verbose_name_plural': 'Asset Installed Software',
                'ordering': ['asset_scan_snapshot', 'name', 'version'],
            },
        ),
        migrations.CreateModel(
            name='AssetAntivirusDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=255)),
                ('product_version', models.CharField(blank=True, max_length=100, null=True)),
                ('engine_version', models.CharField(blank=True, max_length=100, null=True)),
                ('signature_version', models.CharField(blank=True, max_length=100, null=True)),
                ('antispyware_signature_version', models.CharField(blank=True, max_length=100, null=True)),
                ('signatures_last_updated_text', models.CharField(blank=True, help_text='Raw text of when signatures were last updated.', max_length=100, null=True)),
                ('signatures_last_updated_dt', models.DateTimeField(blank=True, help_text='Parsed datetime of when signatures were last updated.', null=True)),
                ('install_path', models.CharField(blank=True, max_length=1024, null=True)),
                ('plugin_source_id', models.IntegerField(blank=True, null=True)),
                ('plugin_source_name', models.CharField(blank=True, max_length=255, null=True)),
                ('asset_scan_snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antivirus_products', to='tracker.assetscandatasnapshot')),
            ],
            options={
                'verbose_name': 'Asset Antivirus Detail',
                'verbose_name_plural': 'Asset Antivirus Details',
                'ordering': ['asset_scan_snapshot', 'product_name'],
            },
        ),
        migrations.CreateModel(
            name='AssetListeningService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('port', models.IntegerField()),
                ('protocol', models.CharField(max_length=10)),
                ('process_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pid', models.CharField(blank=True, max_length=20, null=True)),
                ('service_display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('plugin_id_source', models.IntegerField(blank=True, null=True)),
                ('asset_scan_snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listening_services', to='tracker.assetscandatasnapshot')),
            ],
            options={
                'verbose_name': 'Asset Listening Service',
                'verbose_name_plural': 'Asset Listening Services',
                'ordering': ['asset_scan_snapshot', 'protocol', 'port'],
                'unique_together': {('asset_scan_snapshot', 'port', 'protocol')},
            },
        ),
    ]
